version: '3.8'

services:
  # Frontend React application
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3000/api/v1
    depends_on:
      - backend
    networks:
      - beckdash-network

  # Backend Node.js application
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./server:/app
      - /app/node_modules
      - ./server/uploads:/app/uploads
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/beckdash
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your_jwt_secret_key_here
      - JWT_REFRESH_SECRET=your_jwt_refresh_secret_key_here
      - PORT=3000
      - CORS_ORIGIN=http://localhost:5173
    depends_on:
      - postgres
      - redis
    networks:
      - beckdash-network

  # PostgreSQL database
  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=beckdash
    networks:
      - beckdash-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - beckdash-network

volumes:
  postgres-data:
  redis-data:

networks:
  beckdash-network:
    driver: bridge